# ============================================================================
# Estoque Central - Environment Variables Template
# ============================================================================
# IMPORTANT: Copy this file to .env and configure with your actual values
# Command: cp .env.example .env
#
# WARNING: Never commit .env file to version control!
# ============================================================================

# ----------------------------------------------------------------------------
# Database Configuration
# ----------------------------------------------------------------------------
# PostgreSQL connection for local development
# In docker-compose: service name 'postgres' is used as hostname
DATABASE_URL=jdbc:postgresql://postgres:5432/estoque_central
DATABASE_USER=postgres
DATABASE_PASSWORD=postgres

# ----------------------------------------------------------------------------
# Redis Configuration
# ----------------------------------------------------------------------------
# Redis cache and queue configuration
# In docker-compose: service name 'redis' is used as hostname
REDIS_HOST=redis
REDIS_PORT=6379
REDIS_PASSWORD=

# ----------------------------------------------------------------------------
# Google OAuth 2.0 Configuration
# ----------------------------------------------------------------------------
# Obtain credentials from: https://console.cloud.google.com/apis/credentials
# Required for user authentication via Google Sign-In
GOOGLE_OAUTH_CLIENT_ID=your-client-id.apps.googleusercontent.com
GOOGLE_OAUTH_CLIENT_SECRET=your-client-secret

# ----------------------------------------------------------------------------
# JWT (JSON Web Token) Configuration
# ----------------------------------------------------------------------------
# Secret key for signing JWT tokens
# IMPORTANT: Use a strong random string (minimum 256 bits / 32 characters)
# Generate with: openssl rand -base64 32
JWT_SECRET=change-this-secret-in-production-min-256-bits

# ----------------------------------------------------------------------------
# Application Configuration (Optional)
# ----------------------------------------------------------------------------
# Spring Boot profile (dev, staging, prod)
SPRING_PROFILES_ACTIVE=dev

# Server port (default: 8080)
SERVER_PORT=8080

# Log level (DEBUG, INFO, WARN, ERROR)
LOG_LEVEL=INFO
